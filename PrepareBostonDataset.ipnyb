{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# load datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import os\n",
    "\n",
    "# load boston house prices dataset\n",
    "from sklearn.datasets import load_boston\n",
    "boston_dataset = load_boston()\n",
    "df_boston_features = pd.DataFrame(data = boston_dataset.data, columns=boston_dataset.feature_names)\n",
    "df_boston_target = pd.DataFrame(data = boston_dataset.target, columns=['price'])\n",
    "\n",
    "# create a training dataset and a test dataset using a 75/25 split.\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "boston_split = train_test_split(df_boston_features, df_boston_target, \n",
    "                              test_size=0.25, random_state=17)\n",
    "df_boston_features_train = boston_split[0]\n",
    "df_boston_features_test = boston_split[1]\n",
    "df_boston_target_train = boston_split[2]\n",
    "df_boston_target_test = boston_split[3]\n",
    "\n",
    "# concatenate the features and target and \n",
    "# save training and test datasets into seperate files.\n",
    "#\n",
    "# Amazon Sagemaker requires that the first column of the CSV file is the target value.\n",
    "df_boston_train = pd.concat([df_boston_target_train, df_boston_features_train], axis=1)\n",
    "df_boston_test = pd.concat([df_boston_target_test, df_boston_features_test], axis=1)\n",
    "\n",
    "df_boston_train.to_csv('./datasets/boston_dataset/boston_train.csv', index=False, header=True)\n",
    "df_boston_test.to_csv('./datasets/boston_dataset/boston_test.csv', index=False, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python (AWS_ML_Book)",
   "language": "python",
   "name": "aws_ml_book"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
